<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="./css/main.css">
    <title><%=title%></title>
</head>

<body class="flex flex-col h-screen justify-between bg-gradient-to-r from-blue-500 via-pink-500 to-cyan-500">
    <div
        class="addUserModal duration-100 absolute bg-transparent/60 top-0 left-0 right-0 bottom-0 z-50 justify-center items-center scale-0">
        <div class="flex justify-center items-center h-full">
            <div class="bg-blue-950 p-5 pt-0 relative">
                <span class="closeModel text-white text-[25px] flex justify-end p-2 cursor-pointer">x</span>
                <div class="flex">
                    <input type="text"
                        class="serarchAddUser pl-2 focus:outline-none font-semibold border-black border ">
                </div>
                <div class="suggetions">
                    <ul>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="mainInbox m-auto h-[80vh] relative w-[70%] border-black border">
        <div class="h-full">
            <div class="w-full bg-red-500 flex h-full">
                <div class="inboxMenu bg-blue-600 w-[20%] relative">
                    <div class="p-2 flex justify-end border-b-2">
                        <a href="/"
                            class="hover:bg-white/50 text-[15px] m-0 p-0 flex bg-white/20 rounded-full w-7 h-7 justify-center items-center text-white cursor-pointer">x</a>
                    </div>
                    <ul class="chatUsers">
                        <% ConversationUsers.forEach(user => { %>
                        <li id="<%= user.participantId._id%>"
                            onclick="getconversation('<%=user.participantId._id %>','<%=user._id%>')"
                            class="conversationUserinbox cursor-pointer hover:bg-blue-900 duration-200 border-b-2 ">
                            <img src="./uploads/avatars/<%=user.participantId.avatar %>" alt="">
                            <div>
                                <h1 class="text-white cursor-pointer"><%= user.participantId.firstname %></h1>
                                <p></p>
                            </div>
                        </li>
                        <% }) %>
                    </ul>
                    <span
                        class="openUserModal cursor-pointer bg-white flex justify-center items-center w-10 h-10 rounded-full absolute bottom-5 left-5">+</span>
                </div>
                <div class="inboxArea flex flex-col justify-between bg-cyan-300 w-full h-full">
                    <div class="bg-cyan-500 p-2 flex justify-end border-b-2">
                        <a href="/"
                            class="hover:bg-white/50 text-[15px] m-0 p-0 flex bg-white/20 rounded-full w-7 h-7 justify-center items-center text-white cursor-pointer">x</a>
                    </div>
                    <div class="p-3 flex justify-end items-end flex-col w-full h-[93%]">
                        <div class="chatAreaUsers overflow-y-scroll p-4">
                            <div class="h-[50vh] w-full flex justify-center items-center ">Empty</div>
                        </div>
                        <input id="messageInput" style="display: none;"
                            class="w-full m-1 p-2 bg-transparent text-black border-2 border-black" type="text">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        const addUserModal = document.querySelector('.addUserModal')
        const openModal = document.querySelector('.openUserModal')
        const closeModal = document.querySelector('.closeModel')

        const serarchAddUser = document.querySelector('.serarchAddUser')
        const suggetionsUser = document.querySelector('.suggetions ul')
        const suggetionsUserLI = document.querySelector('.suggetions > ul > li')

        openModal.addEventListener("click", () => {
            addUserModal.classList.add('openUsermodalClass')
            suggetionsUser = ''
            serarchAddUser.value = ''
        })
        closeModal.addEventListener("click", () => {
            addUserModal.classList.remove('openUsermodalClass')
            suggetionsUser = ''
            serarchAddUser.value = ''
        })


        function appendSuggetions(src, user, id) {
            const li = document.createElement('li')
            const img = document.createElement('img')
            const p = document.createElement('p')
            img.src = "/uploads/avatars/" + src
            p.innerHTML = user
            li.appendChild(img)
            li.appendChild(p)
            li.id = id
            suggetionsUser.appendChild(li)
        }

        // appendSuggetions('test', 'Billal hossain')
        const addConversaion = async (perticipentId) => {
            const request = await fetch('inbox/conversation', {
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                method: 'post',
                body: JSON.stringify({
                    perticipentId,
                    perticipentfullaname: "",
                    perticipentavatar: ""
                }),
            })
        }

        async function suggetionsSearch(username) {
            const responce = await fetch(
                '/inbox/search/suggetionsUser/', {
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    method: 'post',
                    body: JSON.stringify({
                        username,
                    }),
                })
            const result = await responce.json()
            result.map(element => {
                appendSuggetions(element.avatar, element.username, element.id)
            });
            let suggetionsUserLis = document.querySelectorAll('.suggetions > ul > li')
            suggetionsUserLis.forEach((element) => {
                element.addEventListener('click', (e) => {
                    addConversaion(element.id)
                    serarchAddUser.value = ''
                    suggetionsUser.innerHTML = ''
                    setTimeout(() => {
                        window.location.reload()
                    }, 200);
                })
            })
        }

        let clearTimeout;
        serarchAddUser.addEventListener('keyup', (e) => {
            const username = e.target.value
            setTimeout(() => {
                suggetionsUser.innerHTML = ''
                clearTimeout = suggetionsSearch(username)
            }, 1000);
        })
        serarchAddUser.addEventListener('keydown', e => {
            clearInterval(clearTimeout)
        })
    </script>
    <script>
        let storeUser;
        let conversationid;
        let messageInput = document.querySelector("#messageInput")

        const chatAreaUsers = document.querySelector(".chatAreaUsers")
        const appendMessage = (username,msg,time,type) =>{
            const message = document.createElement('div')
            const wrapper = document.createElement('div')
            const uname = document.createElement('p')
            uname.innerHTML = username
            const h1 = document.createElement('h1')
            h1.innerHTML = msg
            const Dateandtime = document.createElement('p')
            Dateandtime.innerHTML = time
            message.appendChild(wrapper)
            wrapper.appendChild(uname)
            wrapper.appendChild(h1)
            wrapper.appendChild(Dateandtime)
            message.classList = type
            chatAreaUsers.appendChild(message)
        }
        function scrolltoBottom() {
            chatAreaUsers.scrollTop = chatAreaUsers.scrollHeight
        }

        async function getconversation(id, cid) {
            chatAreaUsers.innerHTML= ''
            storeUser = id
            conversationid = cid
            messageInput.style.display = "block"
            let responce2 = await fetch(`/inbox/conversation/${cid}`, {
                method: "get"
            })
            let result2 = await responce2.json();
            console.log(result2);
            result2.forEach(element => {
                appendMessage('test',element.text,"10:00","senderUser")
            });
            scrolltoBottom();
        }


        // appendMessage("Billal","text msg","10:00","senderUser")

        const storeMsg = async (senderMessage) => {
            await fetch("/inbox/messages", {
                headers: {
                    "Content-Type": "application/json",
                    // 'Content-Type': 'application/x-www-form-urlencoded',
                },
                method: "post",
                body: JSON.stringify(senderMessage)
            })
        }
        messageInput.addEventListener("keyup", (e) => {
            if (e.key === 'Enter') {
                let senderMessage = {
                    coonversationid: conversationid,
                    reciverid: storeUser,
                    sendermsg: e.target.value
                }
                storeMsg(senderMessage);
                appendMessage('test',e.target.value,"10:00","senderUser")
                scrolltoBottom();
                messageInput.value = ""
            }
        })
    </script>
</body>

</html>